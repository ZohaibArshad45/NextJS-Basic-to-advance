"use client";
import React from "react";
import Script from "next/script";

const ScriptComponents = () => {
    return (
        <div>
            <h1>ðŸš€ Next.js Script Component</h1>
            <h2>ðŸ“Œ Using External Libraries Efficiently</h2>

            <pre>
                âœ… Benefits of Next.js Script Component: <br />
                âœ” Improves Performance â€“ Loads scripts efficiently. <br />
                âœ” SEO Friendly â€“ Ensures search engines can index content properly. <br />
                âœ” Execution Control â€“ Load scripts at the right time. <br />
                âœ” Prevents Render Blocking â€“ Ensures faster page loads.
            </pre>
            <br /><br />

            {/* âœ… Example: External Script (Lazy Load) */}
            <Script
                src="https://www.google-analytics.com/analytics.js"
                strategy="lazyOnload"
                onLoad={() => console.log("âœ… Google Analytics script loaded!")}
            />

            {/* âœ… Example: External Script from Public Folder */}
            {/* Place your script in the public folder (e.g., /public/myscript.js) */}
            <Script src="/myscript.js" strategy="afterInteractive" />

            {/* âœ… Example: Inline Script */}
            <Script
                id="custom-inline-script"
                strategy="afterInteractive"
                dangerouslySetInnerHTML={{
                    __html: `console.log("âœ… Inline script executed after hydration!");`,
                }}
            />

            <h2>ðŸ“Œ Available Strategies in the Script Component</h2>
            <pre>
                - ðŸŸ¢ beforeInteractive â†’ Loads before hydration (for critical scripts). <br />
                - ðŸŸ¡ afterInteractive â†’ Loads after hydration (default, recommended). <br />
                - ðŸ”µ lazyOnload â†’ Loads when the page is idle (best for performance).
            </pre>
            <br /><br />

            <h2>ðŸ“Œ Best Use Cases for Next.js Script Component</h2>
            <pre>
                âœ” Google Analytics, Facebook Pixel, Ads, and Tracking Scripts. <br />
                âœ” External JS libraries like jQuery, Chart.js, or third-party widgets. <br />
                âœ” Custom scripts stored in the Public folder (local script files).
            </pre>
        </div>
    );
};

export default ScriptComponents;
